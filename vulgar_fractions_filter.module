<?php
/**
* Implementation of hook_filter_tips().
*
* This hook allows filters to provide help text to users during the content
* editing process. Short tips are provided on the content editing screen, while
* long tips are provided on a separate linked page. Short tips are optional,
* but long tips are highly recommended.
*/
function vulgar_fractions_filter_filter_tips($delta, $format, $long = FALSE) {
  switch ($delta) {
    case 0:
      if ($long) {
        return t('Replaces fractions written as "1/2" with HTML entities representing vulgar fractions such as &frac12;.');
      }
      else {
        return t('Use 1/2 to represent &frac12;');
      }
      break;
  }
}

/**
* Implementation of hook_filter
*
* converts vulgar fractions written in the form 1/2 to HTML entities
*
*/

function vulgar_fractions_filter_filter($op, $delta = 0, $format = -1, $text = '', $cache_id = 0) {
  switch($op) {
    case 'list':
      return array(0 => t('Fraction filter'));

    case
'prepare':
      return $text;

    case
'process':
      // convert  1/2
      $text = preg_replace('@([\s-]|^)1/2([\s"]|$)@', '$1&frac12;$2', $text);
      // convert  1/4
      $text = preg_replace('@([\s-]|^)1/4([\s"]|$)@', '$1&frac14;$2', $text);
      // convert  3/4
      $text = preg_replace('@([\s-]|^)3/4([\s"]|$)@', '$1&frac34;$2', $text);
      // convert  1/3
      $text = preg_replace('@([\s-]|^)1/3([\s"]|$)@', '$1&#8531;$2', $text);
      // convert  2/3
      $text = preg_replace('@([\s-]|^)2/3([\s"]|$)@', '$1&#8532;$2', $text);
      // convert  1/6
      $text = preg_replace('@([\s-]|^)1/6([\s"]|$)@', '$1&#8537;$2', $text);
      // convert  1/8
      $text = preg_replace('@([\s-]|^)1/8([\s"]|$)@', '$1&#8539;$2', $text);
      return $text;

    default:
      return
$text;
  }

}
?>